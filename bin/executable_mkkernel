#!/bin/bash

src=/usr/src/linux

srcdir=$(dirname "$(readlink -f "$0")")

${srcdir}/which-machine
case $? in
  0) num_jobs=17
     microcode="/boot/amd-uc.img" ;;
  1) num_jobs=5
     microcode="/boot/intel-uc.img" ;;
  2) num_jobs=9
     microcode="/boot/intel-uc.img" ;;
esac

# This is needed for `make kernelrelease` and `make image_name` to work
sudo make -C "$src" oldconfig || exit 1

version="$(make -s -C "$src" kernelrelease)"
[ $? -eq 0 ] || exit 1
linux="$src/$(make -s -C "$src" image_name)"
[ $? -eq 0 ] || exit 1
genkernel_tmpdir="/tmp/genkernel-initrd"
initrd="$genkernel_tmpdir/initrd.img"
ukidir="/boot/EFI/Linux"
uki="$ukidir/kernel-$version.efi"
os_release=<<EOF
PRETTY_NAME="Gentoo"
VERSION_ID=$version
EOF

makeopts="-C '${src}' LD=ld.bfd"
script=$(cat <<EOF
    make ${makeopts} -j"$num_jobs" \
    && make ${makeopts} modules_install \
    && mkdir -p "${genkernel_tmpdir}" \
    && genkernel initramfs --bootdir="${genkernel_tmpdir}" --initramfs-filename=initrd.img \
    && mkdir -p "$ukidir" \
    && ([ ! -f "${uki}" ] || mv "${uki}" "${uki}.old") \
    && /lib/systemd/ukify build --uname "$version" --linux "$linux" --initrd "$microcode" --initrd "$initrd" --os-release "$os_release" --cmdline @/etc/cmdline --output "$uki" \
    && rm -rf "${genkernel_tmpdir}" \
    && emerge --ask=n @module-rebuild
EOF
)

sudo sh -c "$script"
